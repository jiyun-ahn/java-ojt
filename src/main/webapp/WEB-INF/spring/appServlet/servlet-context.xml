<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/js/**" location="/js/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Transaction Manager -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- AOP Transaction을 실행하는 대상 Method 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes> 
			<tx:method name="insert*" rollback-for="RuntimeException"></tx:method>
			<tx:method name="create*" rollback-for="RuntimeException"></tx:method>
			<tx:method name="update*" rollback-for="RuntimeException"></tx:method>
			<tx:method name="delete*" rollback-for="RuntimeException"></tx:method>
			<tx:method name="select*" read-only="true"></tx:method>
			<tx:method name="get*" read-only="true"></tx:method>
		</tx:attributes>
	</tx:advice>
	
	<!-- AOP pointcut, advisor 설정 -->
	<aop:config>
		<aop:pointcut id="serviceTxMethod" expression="execution(public * com.ojt.service..*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceTxMethod" />
	</aop:config>

	<context:component-scan base-package="com.ojt.post" />
	
</beans:beans>
